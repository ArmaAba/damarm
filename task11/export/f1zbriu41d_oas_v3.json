{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "description": "API for handling reservations and tables. Provides endpoints for user authentication, table management, and reservations.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://f1zbriu41d.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api",
          "description": "Base path for the API."
        }
      }
    }
  ],
  "paths": {
    "/reservations": {
      "get": {
        "summary": "Retrieve Reservations",
        "description": "Fetch a list of all reservations. Requires user authentication.",
        "responses": {
          "200": {
            "description": "A list of reservations.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "description": "CORS policy header.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      },
      "post": {
        "summary": "Create Reservation",
        "description": "Allows users to create a new reservation by providing required details.",
        "requestBody": {
          "description": "Reservation details.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reservation created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Get Available Tables",
        "description": "Fetch a list of all available tables.",
        "responses": {
          "200": {
            "description": "A list of tables.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Table"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticates a user using their email and password.",
        "requestBody": {
          "description": "User credentials.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials."
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws_proxy"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the reservation."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the reservation."
          },
          "tableId": {
            "type": "string",
            "description": "The ID of the reserved table."
          }
        }
      },
      "ReservationInput": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Desired date and time for the reservation."
          },
          "tableId": {
            "type": "string",
            "description": "ID of the table to reserve."
          }
        }
      },
      "Table": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the table."
          },
          "seats": {
            "type": "integer",
            "description": "Number of seats available at the table."
          }
        }
      },
      "Credentials": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address."
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password."
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token for authenticated access."
          }
        }
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT token for secure access.",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools"
        }
      }
    }
  }
}
